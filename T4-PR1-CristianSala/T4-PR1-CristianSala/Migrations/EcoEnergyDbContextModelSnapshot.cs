// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using T4_PR1_CristianSala.Data;

#nullable disable

namespace T4_PR1_CristianSala.Migrations
{
    [DbContext(typeof(EcoEnergyDbContext))]
    partial class EcoEnergyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("T4_PR1_CristianSala.Model.BaseSimulation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("CostPerKWh")
                        .HasColumnType("float");

                    b.Property<double>("EnergyGenerated")
                        .HasColumnType("float");

                    b.Property<double>("ParameterValue")
                        .HasColumnType("float");

                    b.Property<double>("PricePerKWh")
                        .HasColumnType("float");

                    b.Property<double>("Ratio")
                        .HasColumnType("float");

                    b.Property<DateTime>("SimulationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("ID");

                    b.ToTable("Simulations", (string)null);

                    b.HasDiscriminator<string>("Type").HasValue("BaseSimulation");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("T4_PR1_CristianSala.Model.EnergeticIndicator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("CCAC_GasoilA")
                        .HasColumnType("float");

                    b.Property<double>("CCAC_GasolinaAuto")
                        .HasColumnType("float");

                    b.Property<double>("CDEEBC_ConsumAux")
                        .HasColumnType("float");

                    b.Property<double>("CDEEBC_ConsumBomb")
                        .HasColumnType("float");

                    b.Property<double>("CDEEBC_DemandaElectr")
                        .HasColumnType("float");

                    b.Property<double>("CDEEBC_ProdBruta")
                        .HasColumnType("float");

                    b.Property<double>("CDEEBC_ProdDisp")
                        .HasColumnType("float");

                    b.Property<double>("CDEEBC_ProdNeta")
                        .HasColumnType("float");

                    b.Property<double>("CDEEBC_SaldoIntercanviElectr")
                        .HasColumnType("float");

                    b.Property<double>("CDEEBC_TotVendesXarxaCentral")
                        .HasColumnType("float");

                    b.Property<string>("CDEEBC_TotalEBCMercatLliure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDEEBC_TotalEBCMercatRegulat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DGGN_ConsumGNCentrTerm")
                        .HasColumnType("float");

                    b.Property<double>("DGGN_DistrAlimGNL")
                        .HasColumnType("float");

                    b.Property<double?>("DGGN_PuntFrontEnagas")
                        .HasColumnType("float");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("FEEI_AlimBegudaTabac")
                        .HasColumnType("float");

                    b.Property<double?>("FEEI_AltresIndus")
                        .HasColumnType("float");

                    b.Property<double?>("FEEI_AltresMatConstr")
                        .HasColumnType("float");

                    b.Property<double?>("FEEI_CimentsCalGuix")
                        .HasColumnType("float");

                    b.Property<double?>("FEEI_ConsObrPub")
                        .HasColumnType("float");

                    b.Property<double?>("FEEI_ConstrMedTrans")
                        .HasColumnType("float");

                    b.Property<double?>("FEEI_IndusVidre")
                        .HasColumnType("float");

                    b.Property<double?>("FEEI_Metalurgia")
                        .HasColumnType("float");

                    b.Property<double?>("FEEI_PastaPaperCartro")
                        .HasColumnType("float");

                    b.Property<double?>("FEEI_QuimPetroquim")
                        .HasColumnType("float");

                    b.Property<double?>("FEEI_RestaTransforMetal")
                        .HasColumnType("float");

                    b.Property<double?>("FEEI_SiderFoneria")
                        .HasColumnType("float");

                    b.Property<double?>("FEEI_TextilConfecCuirCalcat")
                        .HasColumnType("float");

                    b.Property<double?>("FEE_Domestic")
                        .HasColumnType("float");

                    b.Property<double?>("FEE_Energetic")
                        .HasColumnType("float");

                    b.Property<double?>("FEE_Industria")
                        .HasColumnType("float");

                    b.Property<double?>("FEE_Primari")
                        .HasColumnType("float");

                    b.Property<double?>("FEE_Terciari")
                        .HasColumnType("float");

                    b.Property<double>("PBEE_Carbo")
                        .HasColumnType("float");

                    b.Property<double>("PBEE_CiclComb")
                        .HasColumnType("float");

                    b.Property<double>("PBEE_FuelOil")
                        .HasColumnType("float");

                    b.Property<double>("PBEE_GasNat")
                        .HasColumnType("float");

                    b.Property<double>("PBEE_Hidroelectr")
                        .HasColumnType("float");

                    b.Property<double>("PBEE_Nuclear")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("EnergeticIndicators", (string)null);
                });

            modelBuilder.Entity("T4_PR1_CristianSala.Model.WaterUsage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ActivitatsEconomiquesIFontsPropies")
                        .HasColumnType("int");

                    b.Property<int>("Any")
                        .HasColumnType("int");

                    b.Property<int>("CodiComarca")
                        .HasColumnType("int");

                    b.Property<string>("Comarca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ConsumDomesticPerCapita")
                        .HasColumnType("float");

                    b.Property<int>("DomesticXarxa")
                        .HasColumnType("int");

                    b.Property<int>("Poblacio")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("WaterUsages", (string)null);
                });

            modelBuilder.Entity("T4_PR1_CristianSala.Model.HydroEnergy", b =>
                {
                    b.HasBaseType("T4_PR1_CristianSala.Model.BaseSimulation");

                    b.HasDiscriminator().HasValue("Sistema Hidroelèctric");
                });

            modelBuilder.Entity("T4_PR1_CristianSala.Model.SolarEnergy", b =>
                {
                    b.HasBaseType("T4_PR1_CristianSala.Model.BaseSimulation");

                    b.HasDiscriminator().HasValue("Sistema Solar");
                });

            modelBuilder.Entity("T4_PR1_CristianSala.Model.WindEnergy", b =>
                {
                    b.HasBaseType("T4_PR1_CristianSala.Model.BaseSimulation");

                    b.HasDiscriminator().HasValue("Sistema Eòlic");
                });
#pragma warning restore 612, 618
        }
    }
}
